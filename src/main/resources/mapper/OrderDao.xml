<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.his.api.db.dao.OrderDao">
    <select id="searchFrontStatistic" parameterType="int" resultType="HashMap">
        SELECT COUNT(*) AS count,
           SUM(amount) AS amount,
           SUM(number) AS number
        FROM tb_order
        WHERE customer_id = #{customerId}
          AND `status` IN (3, 5, 6)
    </select>

    <select id="searchIllegalCountInDay" parameterType="int" resultType="boolean">
        SELECT
            (
                ( SELECT COUNT(*)
                  FROM tb_order
                  WHERE customer_id = #{customerId}
                    AND create_date = CURRENT_DATE()
                    AND status &lt; 3
                ) >= 10
                    OR
                ( SELECT COUNT(*)
                  FROM tb_order
                  WHERE customer_id = #{customerId}
                    AND refund_date = CURRENT_DATE()
                    AND status = 4
                ) >= 5
                ) AS illegal
    </select>

    <update id="closeOrder">
        UPDATE tb_order
        SET status = 2
        WHERE status = 1
          AND TIMESTAMPDIFF(MINUTE, create_time, NOW()) > 30
    </update>

    <insert id="insert">
        INSERT INTO tb_order
        SET customer_id = #{customerId},
            goods_id = #{goodsId},
            snapshot_id = #{snapshotId},
            goods_title = #{goodsTitle},
            goods_price = #{goodsPrice},
            number = #{number},
            amount = #{amount},
            goods_image = #{goodsImage},
            goods_description = #{goodsDescription},
            out_trade_no = #{outTradeNo},
            status = 1,
            create_date = CURRENT_DATE()
    </insert>

    <update id="updatePayment" parameterType="Map">
        UPDATE tb_order
        SET transaction_id= #{transactionId},
            status = 3
        WHERE out_trade_no = #{outTradeNo}
          AND status IN (1,2)
    </update>

    <select id="searchCustomerId" parameterType="String" resultType="Integer">
        SELECT customer_id
        FROM tb_order
        WHERE out_trade_no = #{outTradeNo}
    </select>

    <select id="searchFrontOrderByPage" parameterType="Map" resultType="HashMap">
        SELECT o.id,
        o.out_trade_no AS outTradeNo,
        o.goods_id AS goodsId,
        o.snapshot_id AS snapshotId,
        o.goods_title AS goodsTitle,
        o.goods_price AS goodsPrice,
        o.number,
        o.amount,
        o.goods_image AS goodsImage,
        o.goods_description AS goodsDescription,
        o.`status`,
        IF(o.`status` = 1 AND TIMESTAMPDIFF(MINUTE,o.create_time,NOW()) > 20, true, false) AS disabled,
        DATE_FORMAT(o.create_date,"%Y-%m-%d") AS createDate,
        DATE_FORMAT(o.create_time,"%Y-%m-%d %H:%i:%s") AS createTime,
        COUNT(a.id) AS appointCount
        FROM tb_order o
        LEFT JOIN tb_appointment a ON o.id = a.order_id
        WHERE o.customer_id = #{customerId}
        <if test="status!=null">
            AND o.`status` = #{status}
        </if>
        <if test="keyword!=null">
            AND ( o.out_trade_no = #{keyword} OR o.goods_title LIKE CONCAT( "%", #{keyword}, "%" ) )
        </if>
        GROUP BY o.id
        ORDER BY o.id DESC
        LIMIT #{start}, #{length}
    </select>

    <select id="searchFrontOrderCount" parameterType="Map" resultType="long">
        SELECT COUNT(*)
        FROM tb_order
        WHERE customer_id = #{customerId}
        <if test="status!=null">
            AND `status` = #{status}
        </if>
        <if test="keyword!=null">
            AND (
            out_trade_no = #{keyword} OR goods_title LIKE CONCAT( "%", #{keyword}, "%" )
            )
        </if>
    </select>

    <select id="searchAlreadyRefund" parameterType="int" resultType="String">
        SELECT out_refund_no AS outRefundNo
        FROM tb_order
        WHERE id = #{id}
    </select>

    <select id="searchRefundNeeded" parameterType="Map" resultType="HashMap">
        SELECT transaction_id AS transactionId,
               amount AS amount
        FROM tb_order
        WHERE id = #{id}
          AND status = 3
          AND customer_id = #{customerId}
    </select>

    <update id="updateOutRefundNo" parameterType="Map">
        UPDATE tb_order
        SET out_refund_no = #{outRefundNo},
            refund_date = CURRENT_DATE(),
            refund_time = NOW()
        WHERE id = #{id}
          AND status = 3
    </update>

    <update id="updateRefundStatusByOutRefundNo" parameterType="String">
        UPDATE tb_order
        SET status = 4
        WHERE out_refund_no = #{outRefundNo}
          AND status = 3
    </update>

    <!--查询已经申请退款的订单，并且申请时间距今已经超过30分钟-->
    <select id="searchTimeoutRefund" resultType="HashMap">
        SELECT id,
               out_refund_no AS outRefundNo
        FROM tb_order
        WHERE status = 3
          AND refund_date IS NOT NULL
          AND TIMESTAMPDIFF(MINUTE, refund_time, NOW()) > 30
    </select>

    <!--更新订单的状态-->
    <update id="updateRefundStatusById" parameterType="int">
        UPDATE tb_order
        SET status = 4
        WHERE id = #{id}
          AND status = 3
    </update>

    <update id="closeOrderById"  parameterType="Map">
        UPDATE tb_order
        SET status = 2
        WHERE id = #{id}
          AND customer_id = #{customerId}
          AND status = 1
    </update>

    <select id="searchByPage" parameterType="Map" resultType="HashMap">
        SELECT o.id,
        o.goods_title AS goodsTitle,
        FORMAT(o.goods_price,0) AS goodsPrice,
        o.snapshot_id AS snapshotId,
        o.goods_price AS goodsPrice,
        o.number,
        FORMAT(o.amount,0) AS amount,
        c.photo,
        c.name,
        c.sex,
        c.tel,
        DATE_FORMAT(c.create_time,"%Y-%m-%d") AS registerTime,
        o.`status`,
        o.out_trade_no AS outTradeNo,
        o.transaction_id AS transactionId,
        o.out_refund_no AS outRefundNo,
        o.create_date AS createDate,
        DATE_FORMAT(o.create_time,"%Y-%m-%d %H:%i") AS createTime,
        o.refund_date AS refundDate,
        DATE_FORMAT(o.refund_time,"%Y-%m-%d %H:%i") AS refundTime,
        COUNT(a.id) AS num
        FROM tb_order o
        JOIN tb_customer c ON o.customer_id = c.id
        JOIN tb_goods g ON o.goods_id=g.id
        LEFT JOIN tb_appointment a ON a.order_id= o.id
        <where>
            <if test="tel!=null">
                AND c.tel = #{tel}
            </if>
            <if test="code!=null">
                AND g.`code` = #{code}
            </if>
            <if test="status!=null">
                AND o.status = #{status}
            </if>
            <if test="startDate!=null and endDate!=null">
                AND o.create_date BETWEEN #{startDate} AND #{endDate}
            </if>
            <if test="keyword!=null">
                AND o.goods_title LIKE CONCAT("%",#{keyword},"%")
            </if>
            <if test="customerId!=null">
                AND c.id = #{customerId}
            </if>
        </where>
        GROUP BY o.id
        ORDER BY o.id DESC
        LIMIT #{start}, #{length}
    </select>

    <select id="searchCount" parameterType="Map" resultType="long">
        SELECT COUNT(*)
        FROM tb_order o
        JOIN tb_customer c ON o.customer_id = c.id
        JOIN tb_goods g ON o.goods_id=g.id
        <where>
            <if test="tel!=null">
                AND c.tel = #{tel}
            </if>
            <if test="code!=null">
                AND g.`code` = #{code}
            </if>
            <if test="status!=null">
                AND o.status = #{status}
            </if>
            <if test="startDate!=null and endDate!=null">
                AND o.create_date BETWEEN #{startDate} AND #{endDate}
            </if>
            <if test="keyword!=null">
                AND o.goods_title LIKE CONCAT("%",#{keyword},"%")
            </if>
            <if test="customerId!=null">
                AND c.id = #{customerId}
            </if>
        </where>
    </select>

    <delete id="deleteById" parameterType="int">
        DELETE FROM tb_order
        WHERE id = #{id}
          AND status = 2
    </delete>

    <select id="hasOwnSnapshot" parameterType="Map" resultType="Integer">
        SELECT id
        FROM tb_order
        WHERE customer_id = #{customerId}
          AND snapshot_id = #{snapshotId}
            LIMIT 1
    </select>

    <update id="updateStatus" parameterType="Map">
        UPDATE tb_order
        SET status = #{status}
        WHERE id = #{id}
    </update>

    <select id="hasOwnOrder" parameterType="Map" resultType="Integer">
        SELECT id
        FROM tb_order
        WHERE id = #{id}
          AND customer_id = #{customerId}
    </select>

    <select id="searchOrderIsFinished" parameterType="String" resultType="HashMap">
        SELECT o.id,
               o.number AS n1,
               (SELECT COUNT(*) FROM tb_appointment WHERE order_id=o.id AND status=3) AS n2
        FROM tb_order o JOIN tb_appointment a ON o.id=a.order_id
        WHERE a.uuid = #{uuid}
    </select>

</mapper>
